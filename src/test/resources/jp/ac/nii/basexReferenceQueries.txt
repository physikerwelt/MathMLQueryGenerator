declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'gt' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'W'] and *[3]/name() = 'interval' and *[3][*[1]/name() = 'cn' and *[1][./text() = '2'] and *[2]/name() = 'ci' and *[2][./text() = 'k']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'cn' and *[2][./text() = '2'] and *[3]/name() = 'ci' and *[3][./text() = 'k']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'ci' and *[3][./text() = 'ε']]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:interval
[*[1]/name() = 'ci' and *[1][./text() = 'X'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Σ']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 2

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'factorial' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'cn' and *[3][./text() = '1']]] and *[3]/name() = 'ci' and *[3][./text() = 'n']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'f']] and *[3]/name() = 'ci' and *[3][./text() = 'z']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'ci' and *[3][./text() = 'c']]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'ci' and *[1][./text() = 'normal-⇔'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'for-all'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'for-all'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'ci' and *[3][./text() = 'P'] and *[4]/name() = 'interval' and *[4][*[1]/name() = 'ci' and *[1][./text() = 'x'] and *[2]/name() = 'ci' and *[2][./text() = 'y']]]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'for-all'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'for-all'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'ci' and *[3][./text() = 'P'] and *[4]/name() = 'interval' and *[4][*[1]/name() = 'ci' and *[1][./text() = 'x'] and *[2]/name() = 'ci' and *[2][./text() = 'y']]]]]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*[4]/*) = 2
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 4
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[4]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 4
 and fn:count($x/*[3]/*[2]/*[3]/*) = 2
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'ket'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Ψ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Γ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'cn' and *[2][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'λ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '1']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'cn' and *[2][./text() = '1']]] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Γ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'cn' and *[2][./text() = '2']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'i']]]] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'λ']]] and *[6]/name() = 'apply' and *[6][*[1]/name() = 'csymbol' and *[1][./text() = 'ket'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]] and *[7]/name() = 'apply' and *[7][*[1]/name() = 'csymbol' and *[1][./text() = 'ket']]]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*) = 2
 and fn:count($x/*[3]/*[2]/*[7]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[7]/*) = 2
 and fn:count($x/*[3]/*[2]/*) = 7
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'leq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'ci' and *[3][./text() = 'y']]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'formulae-sequence'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'log' and *[3]/name() = 'ci' and *[3][./text() = 'c']] and *[2]/name() = 'ci' and *[2][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'ln' and *[2]/name() = 'ci' and *[2][./text() = 'c']]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'formulae-sequence'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'gt' and *[2]/name() = 'ci' and *[2][./text() = 'c'] and *[3]/name() = 'cn' and *[3][./text() = '0']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'neq' and *[2]/name() = 'ci' and *[2][./text() = 'c'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*) = 2
 and fn:count($x/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'θ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'cn' and *[2][./text() = '137.508'] and *[3]/name() = 'compose']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 's'] and *[3]/name() = 'ci' and *[3][./text() = 'V']] and *[3]/name() = 'ci' and *[3][./text() = 'ℛ']]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'normal-ℓ'] and *[3]/name() = 'ci' and *[3][./text() = 'm']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'b'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'ω'] and *[3]/name() = 'ci' and *[3][./text() = 'k']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = '𝐦'] and *[3]/name() = 'cn' and *[3][./text() = '1']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'r'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'ci' and *[3][./text() = 'j']]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'Z'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum' and *[3]/name() = 'ci' and *[3][./text() = 'j']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⋅'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'g'] and *[3]/name() = 'ci' and *[3][./text() = 'j']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-e']]]]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'S'] and *[3]/name() = 'ci' and *[3][./text() = 'normal-′']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'S'] and *[3]/name() = 'ci' and *[3][./text() = 'normal-′']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'approx' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = 'Ker'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'times'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'l'] and *[3]/name() = 'times']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[3]/name() = 'interval' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'times'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'j'] and *[3]/name() = 'times']]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'interval' and *[3][*[1]/name() = 'ci' and *[1][./text() = 'G'] and *[2]/name() = 'ci' and *[2][./text() = 'H']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'abs' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'F'] and *[3]/name() = 'ci' and *[3][./text() = 'i']] and *[3]/name() = 'ci' and *[3][./text() = 'G']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'F']] and *[3]/name() = 'ci' and *[3][./text() = 'H']]]]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'E']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'E'] and *[3]/name() = 'ci' and *[3][./text() = 't']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'E']]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'leq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'λ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'L'] and *[3]/name() = 'ci' and *[3][./text() = 'B']]] and *[3]/name() = 'ci' and *[3][./text() = 'd']]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'leq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'L'] and *[3]/name() = 'ci' and *[3][./text() = 'C']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'L'] and *[3]/name() = 'ci' and *[3][./text() = 'T']]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'c'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'σ'] and *[3]/name() = 'ci' and *[3][./text() = 'y']] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'ci' and *[3][./text() = 'τ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'cn' and *[2][./text() = '2'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'π'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[4]/name() = 'ci' and *[4][./text() = 'τ']] and *[3]/name() = 'cn' and *[3][./text() = '3']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'h'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'cn' and *[2][./text() = '2']]]]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[4]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 4
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'R'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 's'] and *[3]/name() = 'ci' and *[3][./text() = 'n'] and *[4]/name() = 'ci' and *[4][./text() = 'o'] and *[5]/name() = 'ci' and *[5][./text() = 'r'] and *[6]/name() = 'ci' and *[6][./text() = 'm'] and *[7]/name() = 'ci' and *[7][./text() = 'a'] and *[8]/name() = 'ci' and *[8][./text() = 'l']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'root']]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*) = 0
 and fn:count($x/*[2]/*[3]/*[6]/*) = 0
 and fn:count($x/*[2]/*[3]/*[7]/*) = 0
 and fn:count($x/*[2]/*[3]/*[8]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 8
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'ϕ'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'cn' and *[2][./text() = '30'] and *[3]/name() = 'compose'] and *[3]/name() = 'ci' and *[3][./text() = 'normal-…']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'cn' and *[2][./text() = '30']]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'ci' and *[3][./text() = 'c']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'ci' and *[3][./text() = 'c']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'P'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'ci' and *[3][./text() = 'X']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'P'] and *[3]/name() = 'ci' and *[3][./text() = 'X']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α']]]]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'csymbol' and *[2][./text() = 'absent'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'csymbol' and *[2][./text() = 'product'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '1']]] and *[3]/name() = 'ci' and *[3][./text() = 'r']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'ci' and *[3][./text() = 'i']]]]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'H'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'j'] and *[3]/name() = 'ci' and *[3][./text() = 'ω']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'ℱ'] and *[3]/name() = 'set' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'h'] and *[3]/name() = 'ci' and *[3][./text() = 't']]]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 1
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'π'] and *[3]/name() = 'cn' and *[3][./text() = '4']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'plus' and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'ci' and *[3][./text() = 'y']] and *[3]/name() = 'ci' and *[3][./text() = 'n']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum'] and *[3]/name() = 'ci' and *[3][./text() = 'n']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'binomial'] and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'ci' and *[3][./text() = 'k']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'ci' and *[3][./text() = 'k']]] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'ci' and *[3][./text() = 'k']]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum'] and *[3]/name() = 'ci' and *[3][./text() = 'n']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'binomial'] and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'ci' and *[3][./text() = 'k']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x']] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'ci' and *[3][./text() = 'k']]]]]]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*) = 4
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 4
 and fn:count($x/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'ci' and *[2][./text() = 'A']] and *[3]/name() = 'ci' and *[3][./text() = 't']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'ci' and *[3][./text() = 't']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'ci' and *[2][./text() = 'A']] and *[3]/name() = 'cn' and *[3][./text() = '0']]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'q']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'leq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'd']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'root' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'cn' and *[2][./text() = '3'] and *[3]/name() = 'cn' and *[3][./text() = '2']]] and *[3]/name() = 'ci' and *[3][./text() = 'ε']] and *[3]/name() = 'ci' and *[3][./text() = 'd']]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'ci' and *[3][./text() = 'μ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'cn' and *[2][./text() = '8'] and *[3]/name() = 'ci' and *[3][./text() = 'π'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'G'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'cn' and *[2][./text() = '3'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'c'] and *[3]/name() = 'cn' and *[3][./text() = '4']]]] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'A'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'β']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'B'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'ci' and *[3][./text() = 'T'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'η'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'ci' and *[3][./text() = 'β']]]]] and *[6]/name() = 'apply' and *[6][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'δ'] and *[3]/name() = 'ci' and *[3][./text() = 'ν']] and *[3]/name() = 'ci' and *[3][./text() = 'μ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'μ']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'ν']]]] and *[7]/name() = 'apply' and *[7][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'α']] and *[8]/name() = 'apply' and *[8][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'ci' and *[3][./text() = 'ν']] and *[9]/name() = 'apply' and *[9][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'β']]]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[4]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[2]/*[5]/*[3]/*) = 4
 and fn:count($x/*[3]/*[2]/*[5]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[6]/*) = 3
 and fn:count($x/*[3]/*[2]/*[7]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[7]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[7]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[7]/*) = 3
 and fn:count($x/*[3]/*[2]/*[8]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[8]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[8]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[8]/*) = 3
 and fn:count($x/*[3]/*[2]/*[9]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[9]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[9]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[9]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 9
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'ci' and *[3][./text() = 'g']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'ci' and *[3][./text() = 't']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'cn' and *[3][./text() = '0']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'ci' and *[3][./text() = 'a']]] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'β'] and *[3]/name() = 'ci' and *[3][./text() = 'y'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'ci' and *[3][./text() = 'g']]]] and *[3]/name() = 'cn' and *[3][./text() = '0']]
where
fn:count($x/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[2]/*[4]/*[3]/*) = 0
 and fn:count($x/*[2]/*[4]/*[4]/*[1]/*) = 0
 and fn:count($x/*[2]/*[4]/*[4]/*[2]/*) = 0
 and fn:count($x/*[2]/*[4]/*[4]/*[3]/*) = 0
 and fn:count($x/*[2]/*[4]/*[4]/*) = 3
 and fn:count($x/*[2]/*[4]/*) = 4
 and fn:count($x/*[2]/*) = 4
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'I'] and *[3]/name() = 'ci' and *[3][./text() = 'c']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'maps-to'] and *[2]/name() = 'ci' and *[2][./text() = 'A'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'M'] and *[3]/name() = 'ci' and *[3][./text() = 'α'] and *[4]/name() = 'ci' and *[4][./text() = 'A'] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'M'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'cn' and *[2][./text() = '1']]]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[5]/*[1]/*) = 0
 and fn:count($x/*[3]/*[5]/*[2]/*) = 0
 and fn:count($x/*[3]/*[5]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[5]/*[3]/*) = 2
 and fn:count($x/*[3]/*[5]/*) = 3
 and fn:count($x/*[3]/*) = 5
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Γ'] and *[3]/name() = 'infinity']
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'Y'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'β'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'cn' and *[3][./text() = '8']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'I'] and *[3]/name() = 'ci' and *[3][./text() = 'X']]]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'μ'] and *[3]/name() = 'ci' and *[3][./text() = 'A']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'cases'] and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'mtext' and *[3][./text() = 'otherwise']] and *[3]/name() = 'mtext' and *[3][./text() = 'Align'] and *[4]/name() = 'mtext' and *[4][./text() = 'if'] and *[5]/name() = 'cn' and *[5][./text() = '0']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'in' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'A'] and *[3]/name() = 'cn' and *[3][./text() = '0'] and *[4]/name() = 'mtext' and *[4][./text() = 'Align'] and *[5]/name() = 'mtext' and *[5][./text() = 'if'] and *[6]/name() = 'cn' and *[6][./text() = '0']]] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'notin' and *[2]/name() = 'share' and *[3]/name() = 'ci' and *[3][./text() = 'A']]]
where
fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 5
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[3]/*[5]/*) = 0
 and fn:count($x/*[3]/*[3]/*[6]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 6
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*[4]/*[3]/*) = 0
 and fn:count($x/*[4]/*) = 3
 and fn:count($x/*) = 4

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'λ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'r'] and *[3]/name() = 'ci' and *[3][./text() = 'p'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'm']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*[4]/*[1]/*) = 0
 and fn:count($x/*[4]/*[2]/*) = 0
 and fn:count($x/*[4]/*) = 3
 and fn:count($x/*) = 4

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⏟'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'interval' and *[3][*[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-˙'] and *[2]/name() = 'ci' and *[2][./text() = 'u']] and *[3]/name() = 'ci' and *[3][./text() = 'x']]]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⏞'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'V'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'g'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⏟'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'ci' and *[3][./text() = '𝐱']]]]]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'cn' and *[3][./text() = '1']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⏞'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⏟'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'f']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'g'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[3]/name() = 'mtext' and *[3][./text() = '(i.e.,'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\operatorname'] and *[3]/name() = 'ci' and *[3][./text() = 'd']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\operatorname'] and *[4]/name() = 'ci' and *[4][./text() = 't']]] and *[5]/name() = 'mtext' and *[5][./text() = '?
                                                            x13']]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'mtext' and *[3][./text() = '(i.e.,'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\operatorname'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\operatorname'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 't']]] and *[5]/name() = 'mtext' and *[5][./text() = ')']]]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 4
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[4]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*[3]/*) = 4
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[2]/*) = 4
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*[3]/*) = 4
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*[5]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 5
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*) = 4
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[3]/*) = 4
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[5]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 5
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'E'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-^'] and *[2]/name() = 'ci' and *[2][./text() = 'σ']] and *[3]/name() = 'cn' and *[3][./text() = '2']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'ci' and *[3][./text() = 'n']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'σ'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:ci
[./text() = '𝖿𝗏']
where
fn:count($x/*) = 0

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum' and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum' and *[3]/name() = 'ci' and *[3][./text() = 'y']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'I'] and *[3]/name() = 'interval' and *[3][*[1]/name() = 'ci' and *[1][./text() = 'x'] and *[2]/name() = 'ci' and *[2][./text() = 'y']]]]]
where
fn:count($x/*[1]/*[1]/*) = 0
 and fn:count($x/*[1]/*[3]/*) = 0
 and fn:count($x/*[1]/*) = 3
 and fn:count($x/*[2]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[1]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*) = 2

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\boldsymbol'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'F'] and *[3]/name() = 'ci' and *[3][./text() = 'r']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-→'] and *[2]/name() = 'cn' and *[2][./text() = '0'] and *[3]/name() = 'ci' and *[3][./text() = 'B']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'ci' and *[1][./text() = 'normal-→'] and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'direct-sum'] and *[2]/name() = 'ci' and *[2][./text() = 'A'] and *[3]/name() = 'ci' and *[3][./text() = 'B']]] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'ci' and *[1][./text() = 'normal-→'] and *[2]/name() = 'share' and *[3]/name() = 'ci' and *[3][./text() = 'A']] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'ci' and *[1][./text() = 'normal-→'] and *[2]/name() = 'share' and *[3]/name() = 'cn' and *[3][./text() = '0.']]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*[4]/*[1]/*) = 0
 and fn:count($x/*[4]/*[3]/*) = 0
 and fn:count($x/*[4]/*) = 3
 and fn:count($x/*[5]/*[1]/*) = 0
 and fn:count($x/*[5]/*[3]/*) = 0
 and fn:count($x/*[5]/*) = 3
 and fn:count($x/*) = 5

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-∇'] and *[3]/name() = 'ci' and *[3][./text() = 'Y']] and *[2]/name() = 'ci' and *[2][./text() = 'T']] and *[3]/name() = 'vector' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'ci' and *[3][./text() = 'normal-…'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[6]/name() = 'ci' and *[6][./text() = 'normal-…']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'Y'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'vector' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'α'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'ci' and *[3][./text() = 'normal-…'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X']] and *[5]/name() = 'apply' and *[5][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[6]/name() = 'ci' and *[6][./text() = 'normal-…']]]]]
where
fn:count($x/*[2]/*[2]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*) = 3
 and fn:count($x/*[2]/*[3]/*[5]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*) = 3
 and fn:count($x/*[2]/*[3]/*[6]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 6
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[1]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[5]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[5]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[5]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[5]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[6]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 6
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'leq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'sum' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'in' and *[2]/name() = 'ci' and *[2][./text() = 'n'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[3]/name() = 'ci' and *[3][./text() = 'd']]]] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'abs' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'ψ'] and *[3]/name() = 'interval' and *[3][*[1]/name() = 'ci' and *[1][./text() = 't'] and *[2]/name() = 'ci' and *[2][./text() = 'n']]]] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'abs' and *[2]/name() = 'ci' and *[2][./text() = 'n']]]] and *[3]/name() = 'ci' and *[3][./text() = 'C']]
where
fn:count($x/*[2]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[1]/*[3]/*) = 3
 and fn:count($x/*[2]/*[1]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'plus-or-minus'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'root' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'cn' and *[2][./text() = '4'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide'] and *[3]/name() = 'ci' and *[3][./text() = 'y']]]]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'cn' and *[2][./text() = '2'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'g'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]]]]]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[4]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[4]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*[4]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*[3]/*) = 4
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*) = 2
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'conditional-set'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'in' and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'ci' and *[3][./text() = 'H']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'formulae-sequence'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'gt' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'abs' and *[2]/name() = 'ci' and *[2][./text() = 'z']] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'lt' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'abs' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[3]/name() = 'ci' and *[3][./text() = 'z']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'λ'] and *[3]/name() = 'ci' and *[3][./text() = 'I']]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'ρ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide'] and *[4]/name() = 'apply' and *[4][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'x']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'μ'] and *[3]/name() = 'ci' and *[3][./text() = 'y']]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[4]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[4]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 4
 and fn:count($x/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'x'] and *[3]/name() = 'ci' and *[3][./text() = 'b']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'H'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'ci' and *[3][./text() = 'K']]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'P']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'direct-sum'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[3]/name() = 'interval' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'E'] and *[3]/name() = 'ci' and *[3][./text() = 'K']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'S'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'i'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]] and *[2]/name() = 'ci' and *[2][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'C'] and *[3]/name() = 'ci' and *[3][./text() = 'i']]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 2
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'f']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'partialdiff' and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[2]/name() = 'ci' and *[2][./text() = 'f']]]]
where
fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'P'] and *[3]/name() = 'ci' and *[3][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 'P'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'conditional-set'] and *[2]/name() = 'ci' and *[2][./text() = 'a'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'geq' and *[2]/name() = 'ci' and *[2][./text() = 'a'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'η'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'w'] and *[3]/name() = 'ci' and *[3][./text() = 'o'] and *[4]/name() = 'ci' and *[4][./text() = 'r'] and *[5]/name() = 'ci' and *[5][./text() = 'k'] and *[6]/name() = 'ci' and *[6][./text() = 'd'] and *[7]/name() = 'ci' and *[7][./text() = 'o'] and *[8]/name() = 'ci' and *[8][./text() = 'n'] and *[9]/name() = 'ci' and *[9][./text() = 'e']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'h'] and *[3]/name() = 'ci' and *[3][./text() = 'e'] and *[4]/name() = 'ci' and *[4][./text() = 'a'] and *[5]/name() = 'ci' and *[5][./text() = 't'] and *[6]/name() = 'ci' and *[6][./text() = 'a'] and *[7]/name() = 'ci' and *[7][./text() = 'b'] and *[8]/name() = 'ci' and *[8][./text() = 's'] and *[9]/name() = 'ci' and *[9][./text() = 'o'] and *[10]/name() = 'ci' and *[10][./text() = 'r'] and *[11]/name() = 'ci' and *[11][./text() = 'b'] and *[12]/name() = 'ci' and *[12][./text() = 'e'] and *[13]/name() = 'ci' and *[13][./text() = 'd']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'Q'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'Q'] and *[3]/name() = 'cn' and *[3][./text() = '2']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'Q'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[5]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[6]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[7]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[8]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[9]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 9
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[5]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[6]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[7]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[8]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[9]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[10]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[11]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[12]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[13]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 13
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'ci' and *[3][./text() = 'f']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'f']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'x']]] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'f']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'y']]] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'y']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'x']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'v'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'y']]]]]
where
fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 4
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 4
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[4]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 4
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 4
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'h']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'assign'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'K']]] and *[3]/name() = 'ci' and *[3][./text() = 'k']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'T'] and *[3]/name() = 'times'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'times']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'tensor-product'] and *[2]/name() = 'ci' and *[2][./text() = 'a'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'ci' and *[3][./text() = 'a']]]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'conditional-set'] and *[2]/name() = 'ci' and *[2][./text() = 'C'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-⋅'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'K'] and *[3]/name() = 'ci' and *[3][./text() = 'X']] and *[3]/name() = 'ci' and *[3][./text() = 'C']] and *[3]/name() = 'cn' and *[3][./text() = '0']]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'neq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'and' and *[2]/name() = 'ci' and *[2][./text() = 'normal-Θ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'ci' and *[3][./text() = 'normal-Θ']]]] and *[3]/name() = 'cn' and *[3][./text() = '0']]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'approx' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'ρ'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'u'] and *[3]/name() = 'ci' and *[3][./text() = 'i']]]] and *[3]/name() = 'ci' and *[3][./text() = 'D']] and *[3]/name() = 'ci' and *[3][./text() = 't']] and *[3]/name() = 'cn' and *[3][./text() = '0']]
where
fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'ci' and *[3][./text() = 't']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'plus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'λ'] and *[3]/name() = 'cn' and *[3][./text() = '1']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'z'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'ci' and *[2][./text() = 't'] and *[3]/name() = 'cn' and *[3][./text() = '1']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'ε'] and *[3]/name() = 'ci' and *[3][./text() = 't']]]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'b'] and *[3]/name() = 'cn' and *[3][./text() = '3']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'b'] and *[3]/name() = 'cn' and *[3][./text() = '3']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'normal-Δ'] and *[3]/name() = 'ci' and *[3][./text() = 'W']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'int' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'V']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'V'] and *[3]/name() = 'cn' and *[3][./text() = '2']]] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[4]/name() = 'ci' and *[4][./text() = 'V']]]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[1]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*[3]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 4
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'gt' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'dimension'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'ci' and *[3][./text() = 'Z']]] and *[3]/name() = 'ci' and *[3][./text() = 'n']]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'd'] and *[3]/name() = 'ci' and *[3][./text() = 't']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'log' and *[3]/name() = 'ci' and *[3][./text() = 'e']] and *[2]/name() = 'ci' and *[2][./text() = 't']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide']]
where
fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[1]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'ci' and *[1][./text() = 'normal-:'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'h'] and *[3]/name() = 'ci' and *[3][./text() = 'i']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'ci' and *[1][./text() = 'normal-→'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'set' and *[3][]]]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 1
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'leq' and *[2]/name() = 'cn' and *[2][./text() = '2'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 's'] and *[3]/name() = 'ci' and *[3][./text() = 'e'] and *[4]/name() = 'ci' and *[4][./text() = 'q'] and *[5]/name() = 'ci' and *[5][./text() = 's']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'leq' and *[2]/name() = 'share' and *[3]/name() = 'cn' and *[3][./text() = '6']]]
where
fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[4]/*) = 0
 and fn:count($x/*[2]/*[3]/*[5]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 5
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'ci' and *[2][./text() = 'F'] and *[3]/name() = 'set' and *[3][]]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 1
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'ci' and *[3][./text() = 'i']] and *[3]/name() = 'ci' and *[3][./text() = 'ω']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'ω'] and *[3]/name() = 'ci' and *[3][./text() = 'i']]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff' and *[2]/name() = 'ci' and *[2][./text() = 'L']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'q'] and *[3]/name() = 'ci' and *[3][./text() = 'i']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'partialdiff'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'partialdiff']]]]
where
fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 2
 and fn:count($x/*[3]/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'x']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'normal-Π'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'σ'] and *[3]/name() = 'cn' and *[3][./text() = '2']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'X'] and *[3]/name() = 'ci' and *[3][./text() = 'T']] and *[3]/name() = 'ci' and *[3][./text() = 'V'] and *[4]/name() = 'ci' and *[4][./text() = 'X']]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*) = 4
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'int' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = 'ℝ'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'int' and *[3]/name() = 'cn' and *[3][./text() = '0']] and *[3]/name() = 'infinity'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'set' and *[2][*[1]/name() = 'apply' and *[1][*[1]/name() = 'apply' and *[1][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'int'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'f'] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'S']]]] and *[3]/name() = 'ci' and *[3][./text() = 'd'] and *[4]/name() = 'ci' and *[4][./text() = 'r']]]]
where
fn:count($x/*[2]/*[1]/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[1]/*[3]/*) = 3
 and fn:count($x/*[2]/*[1]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[4]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 4
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*[3]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[1]/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[1]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[1]/*) = 3
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[2]/*[4]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*[2]/*) = 4
 and fn:count($x/*[3]/*[2]/*[2]/*[1]/*) = 2
 and fn:count($x/*[3]/*[2]/*[2]/*) = 1
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*[4]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 4
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'and' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'set' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'x'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'ci' and *[3][./text() = 'x']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'ci' and *[3][./text() = 'B']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'set' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'y'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'ci' and *[3][./text() = 'y']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'D'] and *[3]/name() = 'ci' and *[3][./text() = 'B']]]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'eq' and *[2]/name() = 'share' and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'cn' and *[3][./text() = '2']]]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[2]/*[2]/*) = 2
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*[2]/*) = 2
 and fn:count($x/*[2]/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[3]/*[3]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'G'] and *[3]/name() = 'list' and *[3][*[1]/name() = 'ci' and *[1][./text() = 'k'] and *[2]/name() = 'ci' and *[2][./text() = 'σ']]] and *[3]/name() = 'ci' and *[3][./text() = 'y']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'plus' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'divide' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'k'] and *[3]/name() = 'ci' and *[3][./text() = 'y']] and *[3]/name() = 'ci' and *[3][./text() = 'σ']]] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'minus' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'divide' and *[2]/name() = 'cn' and *[2][./text() = '1'] and *[3]/name() = 'ci' and *[3][./text() = 'k']]]]]]
where
fn:count($x/*[2]/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 2
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[2]/*[3]/*) = 3
 and fn:count($x/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[3]/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*[3]/*) = 2
 and fn:count($x/*[3]/*[3]/*) = 3
 and fn:count($x/*[3]/*) = 3
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'tensor-product'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'times' and *[2]/name() = 'ci' and *[2][./text() = 'L'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'H'] and *[3]/name() = 'ci' and *[3][./text() = 'B']]] and *[3]/name() = 'ci' and *[3][./text() = 'C']] and *[3]/name() = 'ci' and *[3][./text() = 'X']]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[2]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*[3]/*) = 0
 and fn:count($x/*[2]/*[2]/*[3]/*) = 3
 and fn:count($x/*[2]/*[2]/*) = 3
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'eq' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'π'] and *[3]/name() = 'ci' and *[3][./text() = 'i']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'cn' and *[2][./text() = '2']] and *[3]/name() = 'mtext' and *[3][./text() = '\tbinom'] and *[4]/name() = 'ci' and *[4][./text() = 'N'] and *[5]/name() = 'ci' and *[5][./text() = 'i']]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*[3]/*) = 0
 and fn:count($x/*[3]/*[4]/*) = 0
 and fn:count($x/*[3]/*[5]/*) = 0
 and fn:count($x/*[3]/*) = 5
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:vector
[*[1]/name() = 'apply' and *[1][*[1]/name() = 'root' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'cn' and *[3][./text() = '1']]] and *[2]/name() = 'ci' and *[2][./text() = 'normal-⋯'] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'root' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'p'] and *[3]/name() = 'ci' and *[3][./text() = 'n']]]]
where
fn:count($x/*[1]/*[2]/*[1]/*) = 0
 and fn:count($x/*[1]/*[2]/*[2]/*) = 0
 and fn:count($x/*[1]/*[2]/*[3]/*) = 0
 and fn:count($x/*[1]/*[2]/*) = 3
 and fn:count($x/*[1]/*) = 2
 and fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*[2]/*) = 0
 and fn:count($x/*[3]/*[2]/*[3]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'mtext' and *[2][./text() = '\boldsymbol'] and *[3]/name() = 'ci' and *[3][./text() = 's']]
where
fn:count($x/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'ci' and *[2][./text() = '𝐉'] and *[3]/name() = 'ci' and *[3][./text() = '𝐓']] and *[3]/name() = 'ci' and *[3][./text() = '𝐖'] and *[4]/name() = 'ci' and *[4][./text() = '𝚫'] and *[5]/name() = 'ci' and *[5][./text() = '𝐲']]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*) = 0
 and fn:count($x/*[4]/*) = 0
 and fn:count($x/*[5]/*) = 0
 and fn:count($x/*) = 5

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'csymbol' and *[1][./text() = 'superscript'] and *[2]/name() = 'apply' and *[2][*[1]/name() = 'ci' and *[1][./text() = 'normal-¯'] and *[2]/name() = 'ci' and *[2][./text() = 'V']] and *[3]/name() = 'times']
where
fn:count($x/*[1]/*) = 0
 and fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'divide']
where
fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
declare default element namespace "http://www.w3.org/1998/Math/MathML";
for $m in //*:expr return 
for $x in $m//*:apply
[*[1]/name() = 'times' and *[2]/name() = 'apply' and *[2][*[1]/name() = 'csymbol' and *[1][./text() = 'subscript'] and *[2]/name() = 'ci' and *[2][./text() = 'y'] and *[3]/name() = 'ci' and *[3][./text() = 'k']] and *[3]/name() = 'apply' and *[3][*[1]/name() = 'csymbol' and *[1][./text() = 'delimited-[]'] and *[2]/name() = 'ci' and *[2][./text() = 'n']]]
where
fn:count($x/*[2]/*[1]/*) = 0
 and fn:count($x/*[2]/*[2]/*) = 0
 and fn:count($x/*[2]/*[3]/*) = 0
 and fn:count($x/*[2]/*) = 3
 and fn:count($x/*[3]/*[1]/*) = 0
 and fn:count($x/*[3]/*[2]/*) = 0
 and fn:count($x/*[3]/*) = 2
 and fn:count($x/*) = 3

return
<a href="http://demo.formulasearchengine.com/index.php?curid={$m/@url}">result</a>
